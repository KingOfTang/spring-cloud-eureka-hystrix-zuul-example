<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.techprimers.cloud</groupId>
	<artifactId>eureka-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>eureka-service</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<!-- Spring Boot父项目的组织标识 -->
		<groupId>org.springframework.boot</groupId>
		<!-- Spring Boot父项目的项目标识，提供默认配置和依赖管理 -->
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- Spring Boot父项目的版本号 -->
		<version>1.5.3.RELEASE</version>
		<!-- 相对路径，空值表示Maven会自动从仓库查找父项目 -->
		<relativePath/>
	</parent>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<!-- Spring Cloud Eureka服务器的组织标识 -->
			<groupId>org.springframework.cloud</groupId>
			<!-- Spring Cloud Eureka服务器的启动器依赖，用于构建Eureka服务注册中心 -->
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--
		依赖管理配置块，用于统一管理项目中使用的Spring Cloud相关依赖的版本信息
		通过dependencyManagement来控制依赖版本，确保项目中所有模块使用一致的Spring Cloud版本
	-->
	<dependencyManagement>
		<!--
			依赖列表，包含所有需要进行版本管理的依赖项
		-->
		<dependencies>
			<dependency>
				<!-- Spring Cloud依赖管理的组织标识 -->
				<groupId>org.springframework.cloud</groupId>
				<!-- Spring Cloud依赖管理的项目标识，用于统一管理Spring Cloud组件版本 -->
				<artifactId>spring-cloud-dependencies</artifactId>
				<!-- 指定使用的Spring Cloud版本，Dalston.RELEASE为正式发布版本 -->
				<version>Dalston.RELEASE</version>
				<!-- 依赖类型设置为pom，表示这是一个Maven聚合POM文件 -->
				<type>pom</type>
				<!-- 作用域设置为import，将此POM中的依赖管理配置导入到当前项目中 -->
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
			<!-- Spring Boot Maven插件的组织标识 -->
			<groupId>org.springframework.boot</groupId>
			<!-- Spring Boot Maven插件的项目标识，用于打包Spring Boot应用 -->
			<artifactId>spring-boot-maven-plugin</artifactId>
		</plugin>

		</plugins>
	</build>


</project>
